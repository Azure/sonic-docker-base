# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - '*'

pool:
  vmImage: 'ubuntu-20.04'

container:
  image: sonicdev-microsoft.azurecr.io:443/sonic-slave-buster:latest

steps:
- task: DownloadPipelineArtifact@2
  inputs:
    source: specific
    project: build
    pipeline: 1
    artifact: sonic-buildimage.kvm
    runVersion: 'latestFromBranch'
    runBranch: 'refs/heads/master'
  displayName: "Download artifacts from latest sonic-buildimage build"

- script: |
    set -xe
    ls 
    sudo dpkg -i libnl-3-200_*.deb
    sudo dpkg -i libnl-genl-3-200_*.deb
    sudo dpkg -i libnl-route-3-200_*.deb
    sudo dpkg -i libnl-nf-3-200_*.deb
    sudo dpkg -i libhiredis0.14_*.deb
    sudo dpkg -i libswsscommon_1.0.0_amd64.deb
    sudo dpkg -i python-swsscommon_1.0.0_amd64.deb
    sudo dpkg -i python3-swsscommon_1.0.0_amd64.deb
  workingDirectory: $(Pipeline.Workspace)/target/debs/buster/
  displayName: 'Install Debian dependencies'

- script: |
    set -xe
    ls 
    pip2 install swsssdk-2.0.1-py2-none-any.whl
    pip2 install sonic_py_common-1.0-py2-none-any.whl
    pip3 install swsssdk-2.0.1-py3-none-any.whl
    pip3 install sonic_py_common-1.0-py3-none-any.whl
  workingDirectory: $(Pipeline.Workspace)/target/python-wheels/
  displayName: 'Install Python dependencies'

- script: |
    set -xe
    python3 setup.py test
    python3 setup.py bdist_wheel
  workingDirectory: sonic-chassisd
  displayName: 'Test and build sonic-chassisd'

- script: |
    set -xe
    python2 setup.py test
    python2 setup.py bdist_wheel
    python3 setup.py test
    python3 setup.py bdist_wheel
  workingDirectory: sonic-ledd
  displayName: 'Test and build sonic-ledd'

- script: |
    set -xe
    python2 setup.py test
    python2 setup.py bdist_wheel
    python3 setup.py test
    python3 setup.py bdist_wheel
  workingDirectory: sonic-pcied
  displayName: 'Test and build sonic-pcied'

- script: |
    set -xe
    python2 setup.py test
    python2 setup.py bdist_wheel
    python3 setup.py test
    python3 setup.py bdist_wheel
  workingDirectory: sonic-psud
  displayName: 'Test and build sonic-psud'

- script: |
    set -xe
    python2 setup.py test
    python2 setup.py bdist_wheel
    python3 setup.py test
    python3 setup.py bdist_wheel
  workingDirectory: sonic-syseepromd
  displayName: 'Test and build sonic-syseepromd'

- script: |
    set -xe
    python2 setup.py test
    python2 setup.py bdist_wheel
    python3 setup.py test
    python3 setup.py bdist_wheel
  workingDirectory: sonic-thermalctld
  displayName: 'Test and build sonic-thermalctld'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)/'
    archiveFilePatterns: '**/*.whl'
    artifactName: 'wheels'
  displayName: 'Archive Python wheel packages'
